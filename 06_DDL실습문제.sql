-- 1)

CREATE TABLE TB_CATEGORY (
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

SELECT * FROM TB_CATEGORY;

-- 2)

CREATE TABLE TB_CLASS_TYPE (
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);

SELECT * FROM TB_CLASS_TYPE;

-- 3)
ALTER TABLE TB_CATEGORY ADD PRIMARY KEY(NAME);
--/ 키 이름?

-- 4)
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;

-- 5)
ALTER TABLE TB_CATEGORY
    MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CLASS_TYPE
    MODIFY NO VARCHAR2(10)
    MODIFY NAME VARCHAR2(20);
--/ 한 번에 타입 유지하면서?

-- 6) 
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NAME TO CLASS_TYPE_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;

-- 7)


-- 8)
INSERT INTO TB_CATEGORY VALUES ('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회', 'Y');
COMMIT;

-- 9)
ALTER TABLE TB_DEPARTMENT 
ADD FOREIGN KEY(CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);

SELECT * FROM TB_DEPARTMENT;

-- 10)
CREATE OR REPLACE VIEW VW_TB_STUDENT_INFO
AS (SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT);
    
-- 11)
CREATE OR REPLACE VIEW VW_ADVICE
AS SELECT STUDENT_NAME, DEPARTMENT_NAME, PROFESSOR_NAME
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
ORDER BY DEPARTMENT_NAME;
    
CREATE OR REPLACE VIEW VW_ADVICE
AS (SELECT STUDENT_NAME, DEPARTMENT_NAME, PROFESSOR_NAME
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)) --> 옳지 않다고 오류남
ORDER BY DEPARTMENT_NAME;
--/ ORDER BY는 명령문 가장 마지막에 실행 되어야 하고, 뷰를 저장할 때도 서브쿼리 자체 데이터를 뷰로 만드는 건데
--/ ORDER BY는 뷰를 생성하는 서브쿼리를 먼저 실행해주고 나서 마지막에 정렬해주어야 함
    
-- 12)
CREATE OR REPLACE VIEW VW_DEPT_STD_COUNT
AS SELECT DEPARTMENT_NAME, COUNT(*)
    FROM TB_DEPARTMENT
    JOIN TB_STUDENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME;
--/ must name this expression with a column alias

CREATE OR REPLACE VIEW VW_DEPT_STD_COUNT (학과명, 학생수)
AS SELECT DEPARTMENT_NAME, COUNT(*)
    FROM TB_DEPARTMENT
    JOIN TB_STUDENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME;

SELECT *
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING (DEPARTMENT_NO)
ORDER BY DEPARTMENT_NAME;

    
-- 13)
UPDATE VW_TB_STUDENT_INFO
SET STUDENT_NAME = '서가람'
WHERE STUDENT_NO = 'A213046';

-- 14)
CREATE OR REPLACE VIEW VW_TB_STUDENT_INFO
AS (SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT)
WITH READ ONLY; --/ cannot perform a DML operation on a read-only view

-- 15)
-- TERM_NO -> 2008, 2007, 2006
-- CLASS_NO 별
-- STUDENT_NO의 수

CREATE OR REPLACE VIEW POP_CLASS (과목번호, 과목이름, 누적수강생수)
AS (SELECT CLASS_NO, CLASS_NAME, COUNT(*)
    FROM TB_CLASS
    JOIN TB_GRADE USING(CLASS_NO)
    GROUP BY CLASS_NO) --/ not a GROUP BY expression
ORDER BY TERM_NO DESC;
    
SELECT CLASS_NO, CLASS_NAME, 학생수
FROM 
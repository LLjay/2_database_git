CREATE USER WK IDENTIFIED BY WK;
GRANT RESOURCE, CONNECT, CREATE VIEW TO WK;

-- 1)
SELECT STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS AS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME ASC;

-- 2)
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY SUBSTR(STUDENT_SSN, 1, 6) DESC;

-- 3)
SELECT STUDENT_NAME AS "학생이름", STUDENT_NO AS "학번", STUDENT_ADDRESS AS "거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '%강원도%'
OR STUDENT_ADDRESS LIKE '%경기도%')
AND STUDENT_NO LIKE '9%'
ORDER BY STUDENT_NAME ASC;

-- 4)
--SELECT DEPARTMENT_NO
--FROM TB_DEPARTMENT
--WHERE DEPARTMENT_NAME = '법학과';
--
--SELECT TB_PROFESSOR.PROFESSOR_NAME, TB_PROFESSOR.PROFESSOR_SSN
--FROM TB_PROFESSOR
--JOIN TB_CLASS_PROFESSOR USING (PROFESSOR_NO)
--JOIN TB_CLASS USING (CLASS_NO)
--JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
--WHERE DEPARTMENT_NAME = '법학과'
--ORDER BY SUBSTR(PROFESSOR_SSN, 1, 6) ASC;
----/column ambiguously defined

SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                         FROM TB_DEPARTMENT
                        WHERE DEPARTMENT_NAME = '법학과')
ORDER BY SUBSTR(PROFESSOR_SSN, 1, 6) ASC;
-- 그냥 SSN으로만 해도 정렬된다.

-- 5) 소수점 2자리까지 어떻게 표현하지?
SELECT STUDENT_NO, POINT
FROM TB_GRADE
WHERE TERM_NO = '200402'
AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO ASC;

-- 6)
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
ORDER BY STUDENT_NAME ASC;

-- 7)
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO);

-- 8)
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_PROFESSOR USING (DEPARTMENT_NO);

-- 9)
SELECT CLASS_NAME, PROFESSOR_NAME
FROM (SELECT CLASS_NAME, PROFESSOR_NAME
        FROM TB_CLASS
        JOIN TB_PROFESSOR USING (DEPARTMENT_NO))
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE CATEGORY = '인문사회'; --/ invalid identifier

CREATE OR REPLACE VIEW VW_CP
AS (SELECT CLASS_NAME, PROFESSOR_NAME
    FROM TB_CLASS C, TB_PROFESSOR F
    WHERE C.DEPARTMENT_NO = F.DEPARTMENT_NO);

SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_DEPARTMENT D, VW_CP S
WHERE D.DEPARTMENT_NO = S.DEPARTMENT_NO
AND CATEGORY = '인문사회';
--/ 서브쿼리를 넣어도 invalid identifier 오류가 나고,
--/ 뷰로 만들어서 넣어도 같은 오류가 남
--/ JOIN은 테이블끼리만 가능한가?
--/ ...그렇겠지? 실제 데이터를 매칭시켜서 임시 테이블을 만드는 거니까...
--/ 매칭 시킨 결과만을 출력하는 VIEW로는 JOIN 할 수 없는 것 같다.

SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_PROFESSOR USING (DEPARTMENT_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE CATEGORY = '인문사회'; -- 결과 412행

-- 10)
SELECT STUDENT_NO, STUDENT_NAME, "전체 평점";

-- 11)
SELECT DEPARTMENT_NAME AS "학과이름", STUDENT_NAME AS "학생이름",
       PROFESSOR_NAME AS "지도교수이름"
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING (DEPARTMENT_NO)
JOIN TB_PROFESSOR USING (DEPARTMENT_NO)
WHERE STUDENT_NO = 'A313047';

-- 12)
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT
JOIN TB_GRADE USING (STUDENT_NO)
JOIN TB_CLASS USING (CLASS_NO)
WHERE SUBSTR(TERM_NO, 1, 4) = '2007'
AND CLASS_NAME = '인간관계론'
ORDER BY TERM_NO, STUDENT_NAME;

--답지 예시
SELECT STUDENT_NAME, TERM_NO TERM_NAME
FROM TB_STUDENT
     JOIN TB_GRADE USING(STUDENT_NO)
     JOIN TB_CLASS USING(CLASS_NO)
WHERE TERM_NO LIKE '2007%'
      AND CLASS_NAME = '인간관계론';

-- 13)
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS --/ NULL일 수 있는 테이블부터 먼저 와야지
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR USING (CLASS_NO)
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL;

SELECT DEPARTMENT_NO, PROFESSOR_NO
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = NULL;

-- 14)
SELECT STUDENT_NAME AS "학생이름", 
       NVL(PROFESSOR_NAME, '지도교수 미지정') AS "지도교수"
FROM TB_STUDENT
LEFT JOIN TB_PROFESSOR USING (DEPARTMENT_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO DESC;

SELECT STUDENT_NAME AS "학생이름", 
       NVL(PROFESSOR_NAME, '지도교수 미지정') AS "지도교수"
FROM TB_STUDENT
LEFT JOIN TB_PROFESSOR USING (DEPARTMENT_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과';

SELECT PROFESSOR_NAME, DEPARTMENT_NO
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = '020';

SELECT STUDENT_NAME AS "학생이름", 
       NVL(PROFESSOR_NAME, '지도교수 미지정') AS "지도교수"
FROM TB_STUDENT
LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO);
--/ column ambiguously defined

SELECT *
FROM TB_STUDENT
LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO);
-- DEPARTMENT_NO을 사용하지 않은 시점에서 이미 같은 컬럼이 두 개 생김

SELECT STUDENT_NAME AS "학생이름", 
       NVL(PROFESSOR_NAME, '지도교수 미지정') AS "지도교수"
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO);
-- 각자 별칭을 지어줘서 중복되는 DEPARTMENT_NO 중에서도 어떤 컬럼과 매칭 시켜줄지 정해줘야 함

SELECT STUDENT_NAME AS "학생이름", 
       NVL(PROFESSOR_NAME, '지도교수 미지정') AS "지도교수"
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_ID DESC; -- 학번이 알파벳이 끼어 있어서 값끼리 비교가 안 됨 아냐!!! 그냥 컬럼값이 잘못됐어!!!!!!!!

SELECT STUDENT_NAME AS "학생이름", 
       NVL(PROFESSOR_NAME, '지도교수 미지정') AS "지도교수"
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;

-- 15) 아니 평점을 어케 다른 거랑 섞냐고...
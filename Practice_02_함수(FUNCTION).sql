-- LPAD / RPAD

SELECT EMP_NAME, LPAD(EMAIL, 20)
FROM EMPLOYEE;

SELECT EMP_NAME, RPAD(SUBSTR(EMP_NO, 1, 8), 14, '*')
FROM EMPLOYEE
ORDER BY EMP_NO;

-- LTRIM / RTRIM
SELECT LTRIM('     안녕  ') FROM DUAL;
SELECT RTRIM('     안녕  ') FROM DUAL;
SELECT LTRIM('ASDDSF', 'SD') FROM DUAL;
SELECT LTRIM('SDDSF', 'SD') FROM DUAL;
-- 기준은 지정한 문자들 외에 다른 문자가 나올 때까지, A가 이미 해당되지 않는 문자이므로 삭제되지 않음
SELECT RTRIM('SDADS', 'SD') FROM DUAL;

-- TRIM : 왼쪽, 오른쪽 선택적으로 자를 수도 있으나 잘 쓰지 않음
SELECT TRIM('     안녕   ') FROM DUAL;

-- LOWER / UPPER / INITCAP
SELECT LOWER('HELLO') FROM DUAL;
SELECT UPPER('hello') FROM DUAL;
SELECT INITCAP('hello, everyone. good evening.') FROM DUAL;

-- CONCAT : 두 개의 문자열만 가능함
SELECT CONCAT('HELLO', ', EVERYONE') FROM DUAL;

-- REPLACE
SELECT REPLACE('THE WIND FALLIN FLOWER', 'FALLIN FLOWER', 'BLOWS') FROM DUAL;
SELECT REPLACE('THE STORM BLOWS', ' STORM ', 'WIND') FROM DUAL;
SELECT REPLACE('THE WINSD BLOWS', 'DS', 'S') FROM DUAL; -- 에러는 안 나고 그냥 안 바뀐 상태 반환
SELECT REPLACE('THEWINDSBLOWS', 'S', ' ') FROM DUAL;

-- ABS, MOD, ROUND, CEIL, FLOOR, TRUNC
SELECT ABS(-10) FROM DUAL;
SELECT MOD(11, 3) FROM DUAL;
SELECT ROUND(4.5) FROM DUAL;
SELECT ROUND(4.4) FROM DUAL;
SELECT CEIL(4.4) FROM DUAL;
SELECT FLOOR(4.6) FROM DUAL;
SELECT TRUNC(4.362, 1) FROM DUAL;
SELECT TRUNC(4.362, -1) FROM DUAL;
SELECT TRUNC(365.362, -2) FROM DUAL;

-- SYSDATE
SELECT SYSDATE FROM DUAL;

-- MONTHS_BETWEEN : 두 날짜 사이의 개월 수
-- 사원들의 사원명, 입사일, 근무일수, 근무 개월수 조회
SELECT EMP_NAME, HIRE_DATE, SYSDATE - HIRE_DATE
FROM EMPLOYEE;

SELECT MONTHS_BETWEEN(SYSDATE, HIRE_DATE)
FROM EMPLOYEE;
-- DATE - DATE => 결과는 무조건 일 로 표시
SELECT EMP_NAME, HIRE_DATE, FLOOR(SYSDATE - HIRE_DATE), FLOOR(MONTHS_BETWEEN(SYSDATE, HIRE_DATE))
FROM EMPLOYEE;

-- ADD_MONTHS
SELECT EMP_NAME, HIRE_DATE, ADD_MONTHS(HIRE_DATE, 5)
FROM EMPLOYEE;

-- NEXT_DAY, LAST_DAY
SELECT NEXT_DAY(SYSDATE, '일') FROM DUAL;
SELECT NEXT_DAY(SYSDATE, 7) FROM DUAL;
SELECT LAST_DAY(SYSDATE) FROM DUAL;
SELECT LAST_DAY(HIRE_DATE) FROM EMPLOYEE;

-- EXTRACT
SELECT EXTRACT(YEAR FROM SYSDATE), EXTRACT(MONTH FROM SYSDATE), EXTRACT(DAY FROM SYSDATE) FROM DUAL;

-- 근로자 테이블에서 사원명, 입사일, 입사 후 3개월의 날짜 조회(정규직 전환일)
SELECT EMP_NAME, HIRE_DATE, ADD_MONTHS(HIRE_DATE, 3)
FROM EMPLOYEE;

-- 사원 테이블에서 사원명, 입사일, 입사 달의 마지막 날짜, 입사 달의 근무일수 조회
SELECT EMP_NAME, HIRE_DATE, LAST_DAY(HIRE_DATE), LAST_DAY(HIRE_DATE) - HIRE_DATE
FROM EMPLOYEE;

-- 사원의 사원명, 입사년도, 입사월, 입사일을 조회
SELECT EMP_NAME, EXTRACT(YEAR FROM HIRE_DATE)
        , EXTRACT(MONTH FROM HIRE_DATE)
        , EXTRACT(DAY FROM HIRE_DATE)
FROM EMPLOYEE;

-- 언어 변경
ALTER SESSION SET NLS_LANGUAGE = AMERICAN;
ALTER SESSION SET NLS_LANGUAGE = KOREAN;

-- 형변환
-- TO_CHAR : 숫자/날짜 -> 문자
SELECT TO_CHAR(1234) FROM DUAL;
SELECT TO_CHAR(1234, '9999999') FROM DUAL;
SELECT TO_CHAR(1234, '00000') FROM DUAL;
SELECT TO_CHAR(123, '00000000') FROM DUAL;
SELECT TO_CHAR(35000, 'L9999999') FROM DUAL;
SELECT TO_CHAR(3500, '$9999999') FROM DUAL;

SELECT TO_CHAR(SYSDATE) FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'HH:MI:SS') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'AM HH:MI:SS') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'HH24:MI:SS') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD DAY') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD DY') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'MON, YYYY') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY"년" MM"월" DD"일" HH"시" MI"분" SS"초"') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YY') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'RR') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YEAR') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'MM') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'MON') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'MONTH') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'D') FROM DUAL; --/ 요일
SELECT TO_CHAR(SYSDATE, 'DD') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'DDD') FROM DUAL; --/ 오늘이 이번 년도에서 몇 번째 일수인지
SELECT TO_CHAR(SYSDATE, 'DAY') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'DY') FROM DUAL;

-- TO_DATE : 숫자/문자 -> 날짜
SELECT TO_DATE(20240220) FROM DUAL;
SELECT TO_DATE(240220) FROM DUAL;
SELECT TO_DATE(650219) FROM DUAL;
SELECT TO_DATE(020505) FROM DUAL; --/ 0으로 시작해서 오류
SELECT TO_DATE('020505') FROM DUAL; --/ 문자로 만들어서 변환해줌
SELECT TO_DATE('20240219 124000') FROM DUAL; --/ 포맷을 정해줘야 함
SELECT TO_DATE('20240219 124000', 'YYYYMMDD HH24MISS') FROM DUAL; --/ 이건 왜 시분초는 안 나오지?

-- TO_NUMBER : 문자 -> 숫자
SELECT TO_NUMBER('23423526543') FROM DUAL;
SELECT '1000' + '4000' FROM DUAL;


-- NULL 처리 함수
-- NVL : 컬럼값이 NULL인 경우 표기할 값 지정
SELECT EMP_NAME, NVL(BONUS, 0)
FROM EMPLOYEE;

SELECT EMP_NAME, NVL(DEPT_CODE, '미지정') AS "부서코드"
FROM EMPLOYEE;

-- NVL2 : 컬럼값의 NULL여부에 따라 값 표기
SELECT EMP_NAME, NVL2(DEPT_CODE, '지정', '미지정') AS "부서코드"
FROM EMPLOYEE;

SELECT EMP_NAME, NVL2(BONUS, 'O', 'X') AS "보너스 여부"
FROM EMPLOYEE;

-- NULLIF : 두 값이 일치하면 NULL, 일치하지 않는다면 대상1 반환
SELECT NULLIF('123', '123') FROM DUAL;
SELECT NULLIF('123', '234') FROM DUAL;
SELECT NULLIF(123, 123) FROM DUAL;
SELECT NULLIF('90/01/01', '90/01/01') FROM DUAL;
SELECT NULLIF(BONUS, DEPT_CODE) FROM EMPLOYEE;
SELECT NULLIF(BONUS, MANAGER_ID) FROM EMPLOYEE; --/ 왜 형이 일치하지 않는다고 하지?

-- DECODE : SWITCH와 비슷, 범위값 X, 대상을 비교
SELECT EMP_ID,
        DECODE (DEPT_CODE, 'D9', '첫 번째', 'D8', '두 번째') --/ 조건에 해당하는 값이 없으면 그냥 NULL로 나옴
FROM EMPLOYEE;

SELECT EMP_NAME, DECODE(DEPT_CODE, 'D9', 'O', 'X')
FROM EMPLOYEE;

SELECT EMP_ID, EMP_NAME, EMP_NO,
        DECODE(SUBSTR(EMP_NO, 8, 1), '1', '남자', '2', '여자', '외계인너무웃기네') AS "성별"
FROM EMPLOYEE;

SELECT EMP_ID, EMP_NAME, EMP_NO,
        DECODE(SUBSTR(EMP_NO, 8, 1), '2', '여자') AS "성별"
FROM EMPLOYEE;

-- CASE WHEN THEN : 범위값 O, 조건식을 비교
SELECT EMP_NAME, SALARY, 
        CASE WHEN SALARY >= 5000000 THEN '고급'
             WHEN SALARY >= 3500000 THEN '중급'
             ELSE '초급'
        END
FROM EMPLOYEE;

SELECT EMP_NAME, HIRE_DATE,
        CASE WHEN HIRE_DATE <= '10/10/10' THEN 'O'
        ELSE 'X'
        END
FROM EMPLOYEE;